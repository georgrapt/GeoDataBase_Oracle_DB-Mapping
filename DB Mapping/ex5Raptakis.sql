-- Create table municipality
CREATE TABLE ex5municipality(M_ID) INT NOT NULL, POLYGON_ID NUMBER);
ALTER TABlE ex5municipality ADD FOREIGN KEY (POLYGON_ID) REFERENCES ex5polygon(POLYGON_ID); 

-- Create table property
CREATE TABLE ex5property(PROPERTY_ID) INT NOT NULL PRIMARY KEY, MUNICIPALITY_ID INT NOT NULL, POLYGON_ID NUMBER NOT NULL);
ALTER TABLE ex5property ADD FOREIGN KEY (MUNICIPALITY_ID) REFERENCES ex5municipality(M_ID) ;
ALTER TABLE ex5property ADD FOREIGN KEY (POLYGON_ID) REFERENCES ex5polygon(POLYGON_ID);

-- Create table person
CREATE TABLE ex5person(PERSON_ID INT NOT NULL PRIMARY KEY,NAME VARCHAR(20),GIVEN_NAME VARCHAR(20));

-- Create the intermediate table that connects the owners with the properties
CREATE TABLE ex5ownership(PROPERTY_ID INT NOT NULL, PERSON_ID INT NOT NULL);
ALTER TABLE ex5ownership ADD PRIMARY KEY (PROPERTY_ID, PERSON_ID);
ALTER TABLE ex5ownership ADD FOREIGN KEY (PROPERTY_ID) REFERENCES ex5property(PROPERTY_ID);
ALTER TABLE ex5ownership ADD FOREIGN KEY (PERSON_ID) REFERENCES ex5person(PERSON_ID); 

-- Create table street
CREATE TABLE ex5street(STREET_ID) INT NOT NULL PRIMARY KEY, STREETNAME VARCHAR(20),USAGE VARCHAR(20),PROPERTY_ID INT NOT NULL);
ALTER TABlE ex5street ADD FOREIGN KEY PROPERTY_ID  REFERENCES ex5property(PROPERTY_ID);

-- Create table building
CREATE TABLE ex5building(BUILDING_ID) INT NOT NULL PRIMARY KEY, POLYGON_ID NUMBER, FLOORS INT, STREETNAME VARCHAR(20), NUMB VARCHAR(20), PROPERTY_ID INT NOT NULL);  
ALTER TABlE ex5building ADD FOREIGN KEY (POLYGON_ID) REFERENCES ex5polygon(POLYGON_ID);
ALTER TABlE ex5building ADD FOREIGN KEY (PROPERTY_ID) REFERENCES ex5property(PROPERTY_ID);

-- Create table building part
CREATE TABLE ex5building_part (BUILDING_PART_ID INT NOT NULL PRIMARY KEY, POLYGON_ID NUMBER, type VARCHAR(20), BUILDING_ID INT NOT NULL); 
ALTER TABlE ex5building_part ADD FOREIGN KEY BUILDING_PART_ID  REFERENCES ex5building_part(BUILDING_PART_ID);
ALTER TABlE ex5building_part ADD FOREIGN KEY POLYGON_ID  REFERENCES ex5property(PROPERTY_ID);
ALTER TABlE ex5building_part ADD FOREIGN KEY BUILDING_ID REFERENCES ex5building(BUILDING_ID);

-- Create table point
CREATE TABLE ex5point(POINT_ID INT NOT NULL PRIMARY KEY,X DOUBLE PRECISION,Y DOUBLE PRECISION); 

-- Create table edge
CREATE TABLE ex5edges(EDGE_ID INT NOT NULL PRIMARY KEY, POINT_ID1 INT NOT NULL, POINT_ID2 INT NOT NULL);
ALTER TABLE ex5edges ADD PRIMARY KEY (POINT_ID1, POINT_ID2);
ALTER TABLE ex5edges ADD FOREIGN KEY (POINT_ID1) REFERENCES ex5point(POINT_ID1);
ALTER TABLE ex5edges ADD FOREIGN KEY (POINT_ID2) REFERENCES ex5point(POINT_ID2);

-- Create table polygon
CREATE TABLE ex5polygon(POLYGON_ID INT NOT NULL PRIMARY KEY, POLYGON_NAME INT NOT NULL);

-- Create the intermediate table that connects the polygons with the edges
CREATE TABLE ex5POLYGON_EDGE(POLYGON_ID INT NOT NULL, EDGE_ID INT NOT NULL, E_ORDER INT NOT NULL);
ALTER TABLE ex5POLYGON_EDGE ADD PRIMARY KEY (POLYGON_ID, EDGE_ID);
ALTER TABLE ex5POLYGON_EDGE ADD FOREIGN KEY (POLYGON_ID) REFERENCES ex5polygon(POLYGON_ID);
ALTER TABLE ex5POLYGON_EDGE ADD FOREIGN KEY (EDGE_ID) REFERENCES ex5edges(EDGE_ID);

/* STUDENTS_2015_S is the table that give attribute to the table of persons*/
CREATE SEQUENCE ex5person_seq INCREMENT BY 1 START WITH 1 MINVALUE 1 CACHE 100;
UPDATE ex5person SET PERSON_ID = ex5person_seq.nextval;
INSERT INTO ex5person(NAME, GIVEN_NAME) SELECT NAME, GIVEN_NAME FROM STUDENTS_2015_S;

/* In order to ensure the referential integrity of my database, when I want to delete the table person_s, 
it is needed to add the command << ON DELETE CASCADE>> in the attribute <PERSON_ID> 
during the creation of the intermediate table that connects the owners with the properties.
CREATE TABLE ex5ownership(PROPERTY_ID INT NOT NULL, PERSON_ID INT NOT NULL);
ALTER TABLE ex5ownership ADD PRIMARY KEY (PROPERTY_ID, PERSON_ID);
ALTER TABLE ex5ownership ADD FOREIGN KEY (PROPERTY_ID) REFERENCES ex5property(PROPERTY_ID);
ALTER TABLE ex5ownership ADD FOREIGN KEY (PERSON_ID) REFERENCES ex5person(PERSON_ID) ON DELETE CASCADE;*/
